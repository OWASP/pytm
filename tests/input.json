{
  "name": "my test tm",
  "description": "aaa",
  "isOrdered": true,
  "onDuplicates": "IGNORE",
  "boundaries": [
    {
      "name": "Internet",
      "controls": {
        "authenticatesDestination": false,
        "authenticatesSource": false,
        "authenticationScheme": "",
        "authorizesSource": false,
        "checksDestinationRevocation": false,
        "checksInputBounds": false,
        "definesConnectionTimeout": false,
        "disablesDTD": false,
        "disablesiFrames": false,
        "encodesHeaders": false,
        "encodesOutput": false,
        "encryptsCookies": false,
        "encryptsSessionData": false,
        "handlesCrashes": false,
        "handlesInterruptions": false,
        "handlesResourceConsumption": false,
        "hasAccessControl": false,
        "implementsAuthenticationScheme": false,
        "implementsCSRFToken": false,
        "implementsNonce": false,
        "implementsPOLP": false,
        "implementsServerSideValidation": false,
        "implementsStrictHTTPValidation": false,
        "invokesScriptFilters": false,
        "isEncrypted": false,
        "isEncryptedAtRest": false,
        "isHardened": false,
        "isResilient": false,
        "providesConfidentiality": false,
        "providesIntegrity": false,
        "sanitizesInput": false,
        "tracksExecutionFlow": false,
        "usesCodeSigning": false,
        "usesEncryptionAlgorithm": "",
        "usesMFA": false,
        "usesParameterizedInput": false,
        "usesSecureFunctions": false,
        "usesStrongSessionIdentifiers": false,
        "usesVPN": false,
        "validatesContentType": false,
        "validatesHeaders": false,
        "validatesInput": false,
        "verifySessionIdentifiers": false
        }
    },
    {
      "name": "Server/DB"
    }
  ],
  "elements": [
    {
      "__class__": "Actor",
      "name": "User",
      "inBoundary": "Internet"
    },
    {
      "__class__": "Server",
      "name": "Web Server"
    },
    {
      "__class__": "Datastore",
      "name": "SQL Database",
      "inBoundary": "Server/DB"
    }
  ],
  "flows": [
    {
      "name": "Request",
      "source": "User",
      "sink": "Web Server",
      "note": "bbb"
    },
    {
      "name": "Insert",
      "source": "Web Server",
      "sink": "SQL Database",
      "note": "ccc"
    },
    {
      "name": "Select",
      "source": "SQL Database",
      "sink": "Web Server"
    },
    {
      "name": "Response",
      "source": "Web Server",
      "sink": "User"
    }
  ]
}
