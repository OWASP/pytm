from pytm.pytm import Dataflow, Element, Server, Datastore, Process, ExternalEntity, SetOfProcesses, Actor

''' Add threats here '''
Threats = {
    {
  "AA01": {
    "description": "Dataflow not authenticated",
    "target": Dataflow,
    "condition": "target._authenticatedWith is False",
    "comments": "instead of looking at both sides of a flow, consider the flow authenticated only if both sides authenticate",
  },
  "HA01": {
    "description": "Server not hardened",
    "target": Server,
    "condition": "target._isHardened is False",
  },
  "AU01": {
    "description": "Logs created: verify if sensitive data is stored",
    "target": Datastore,
    "condition": "target._storesLogData is True",
  },
  "AU02": {
    "description": "Potential weak protections for audit data",
    "target": Datastore,
    "condition": "target._storesLogData is True and target._isEncrypted is False",
  },
  "AC01": {
    "description": "Process Memory Tampered",
    "source": Process,
    "target": Process,
    "condition": "target._codeType == 'unmanaged'",
  },
  "AC02": {
    "description": "Replay Attacks",
    "source": Process,
    "target": Dataflow,
    "condition": "target._implementsCommunicationProtocol is True and target._implementsNonce is False",
  },
  "CR01": {
    "description": "Collision Attacks",
    "source": Process,
    "target": Process,
    "condition": "target._implementsCommunicationProtocol is True",
  },
  "AU03": {
    "description": "Risks from logging",
    "source": Process,
    "target": Datastore,
    "condition": "target._storesLogData is True",
  },
  "AA02": {
    "description": "Authenticated Data Flow Compromised",
    "source": (Process, Datastore, ExternalEntity),
    "target": (Process, Datastore),
    "condition": "target._providesConfidentiality is False and target._providesIntegrity is False and target._authenticatesSource is True or target._authenticatesDestination is True",
  },
  "IN01": {
    "description": "Potential SQL Injection Vulnerability",
    "source": Process,
    "target": Datastore,
    "condition": "target._isSQL is True",
  },
  "IN02": {
    "description": "XML DTD and XSLT Processing",
    "source": (Process, Datastore, ExternalEntity),
    "target": Process,
    "condition": "target._datatype == 'XML'",
  },
  "IN03": {
    "description": "JavaScript Object Notation Processing",
    "source": (Process, Datastore, ExternalEntity),
    "target": Process,
    "condition": "target._datatype == 'JSON'",
  },
  "IN04": {
    "description": "Cross Site Scripting",
    "source": (Process, Datastore, ExternalEntity),
    "target": Process,
    "condition": "target._name == 'Server' and target._sanitizesOutput is False and target._sanitizesInput is False",
  },
  "AC03": {
    "description": "The Data Store Could Be Corrupted",
    "source": Process,
    "target": Datastore,
    "condition": "target._isShared is True or target._hasWriteAccess is True",
  },
  "AA03": {
    "description": "Weakness in SSO Authorization",
    "source": (Process, Datastore),
    "target": (Process, ExternalEntity),
    "condition": "target._ImplementsAuthenticationScheme is False",
  },
  "AC04": {
    "description": "Elevation Using Impersonation",
    "source": (Process, ExternalEntity),
    "target": Process,
    "condition": "source._ImplementsAuthenticationScheme is False",
  },
  "IN05": {
    "description": "Target May be Subject to Elevation of Privilege Using Remote Code Execution",
    "source": (Process, ExternalEntity, Datastore),
    "target": Process,
    "condition": "",
  },
  "AC05": {
    "description": "Elevation by Changing the Execution Flow in {target.Name}",
    "source": (Process, ExternalEntity, Datastore),
    "target": Process,
    "condition": "",
  },
  "OT01": {
    "description": "Cross Site Request Forgery",
    "source": (Process, ExternalEntity),
    "target": Process,
    "condition": "source._ImplementsAuthenticationScheme is False OR source._ImplementsNonce is False OR target._DefinesConnectionTimeout is False",
  },
  "RE01": {
    "description": "Potential Excessive Resource Consumption",
    "source": Process,
    "target": Datastore,
    "condition": "target._HandlesResources is False",
  },
  "RE02": {
    "description": "Potential Process Crash or Stop for Target",
    "source": (Process, Datastore, ExternalEntity),
    "target": Process,
    "condition": "target._isResilient is False OR target._handlesResources is False",
  },
  "RE03": {
    "description": "Data Flow Is Potentially Interrupted",
    "source": (Process, Datastore, ExternalEntity),
    "target": (Process, Datastore, ExternalEntity),
    "condition": "target._handlesResources is False OR target._definesConnectionTimeout is True",
  },
  "RE04": {
    "description": "Data Store Inaccessible",
    "source": Datastore,
    "target": Datastore,
    "condition": "target._isResilient is False OR target._hasFirewallProtection is False OR target._handlesResources is False",
  },
  "AA04": {
    "description": "Authorization Bypass",
    "source": Process,
    "target": Datastore,
    "condition": "target._authenticatesSource is False and source._authenticatesDestination is False",
    "remediation": "",
  },
  "DE01": {
    "description": "Data Flow Sniffing",
    "source": (Process, Datastore),
    "target": Dataflow,
    "condition": "target._protocol is HTTP and source._isEncrypted is False",
    "remediation": "",
  },
  "AC06": {
    "description": "Weak Access Control for a Resource",
    "source": Datastore,
    "target": Process,
    "condition": "source._authenticatesDestination is False",
  },
  "DS01": {
  "description": "Weak Credential Storage",
  "source": Process,
  "target": Datastore,
  "condition": "(target._storesPII is True or target._storesSensitiveData is True) and (target._isEncrypted is False) or (target._providesConfidentiality is False or target._providesIntegrity is False)",
  "remediation": "",
  },
  "DE02": {
  "description": "Weak Credential Transit",
  "target": Dataflow,
  "condition": "target._implementsCommunicationProtocol is False and target._authenticatedWith is False and target._protocol is HTTP",
  "remediation": "",
},
"AA05": {
  "description": "Weak Authentication Scheme",
  "source": Process,
  "target": Process,
  "condition": "source._ImplementsAuthenticationScheme is False and target.ImplementsAuthenticationScheme is False",
},
},
}
